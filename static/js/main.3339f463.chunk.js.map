{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SortType","GoodsList","_ref2","visibleGoods","_jsx","children","map","good","App","sortField","setSortField","useState","Default","reverseField","setIsReversedField","goods","_ref","preparedGoods","sort","good1","good2","Alpha","localeCompare","Length","length","reverse","getPreparedGoods","_jsxs","className","onClick","type","cn","resetAll","ReactDOM","render","document","getElementById"],"mappings":"wOAKO,MAAMA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACA,IAEGC,EAAQ,SAARA,GAAQ,OAARA,EAAQ,uBAARA,EAAQ,gBAARA,EAAQ,WAARA,CAAQ,EAARA,GAAQ,IAyCN,MAAMC,EAA6BC,IAAA,IAAC,aAAEC,GAAcD,EAAA,OACzDE,cAAA,MAAAC,SACGF,EAAaG,KAAIC,GAChBH,cAAA,MAAe,UAAQ,OAAMC,SAAEE,GAAtBA,MAER,EAGMC,EAAgBA,KAC3B,MAAOC,EAAWC,GAAgBC,mBAAmBX,EAASY,UACvDC,EAAcC,GAAsBH,oBAAS,GAE9CR,EA3CR,SACEY,EAAeC,GAKd,IAJD,UAAEP,EAAS,aAAEI,GAGZG,EAED,MAAMC,EAAgB,IAAIF,GAqB1B,OAnBIN,GACFQ,EAAcC,MAAK,CAACC,EAAOC,KACzB,OAAQX,GACN,KAAKT,EAASqB,MACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKpB,EAASuB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,EACX,IAIAX,GACFI,EAAcQ,UAGTR,CACT,CAcuBS,CAAiB3B,EACpC,CAAEU,YAAWI,iBAOf,OACEc,eAAA,OAAKC,UAAU,kBAAiBvB,SAAA,CAC9BsB,eAAA,OAAKC,UAAU,UAASvB,SAAA,CACtBD,cAAA,UACEyB,QAASA,IAAMnB,EAAaV,EAASqB,OACrCS,KAAK,SACLF,UAAWG,IAAG,SAAU,UACtB,CACE,WAAYtB,IAAcT,EAASqB,QAClChB,SACN,wBAIDD,cAAA,UACEyB,QAASA,IAAMnB,EAAaV,EAASuB,QACrCO,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CACE,WAAYtB,IAAcT,EAASuB,SAClClB,SACN,mBAIDD,cAAA,UACEyB,QAASA,IAAMf,GAAoBD,GACnCiB,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CACE,YAAalB,IACZR,SACN,aAICI,GAAaI,IACbT,cAAA,UACEyB,QA3COG,KACftB,EAAaV,EAASY,SACtBE,GAAmB,EAAM,EA0CjBgB,KAAK,SACLF,UAAU,4BAA2BvB,SACtC,aAMLD,cAACH,EAAS,CAACE,aAAcA,MAErB,EC7HV8B,IAASC,OACP9B,cAACI,EAAG,IACJ2B,SAASC,eAAe,Q","file":"static/js/main.3339f463.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alpha = 'Alphabetically',\n  Length = 'Length',\n  Default = '',\n}\n\ntype Props = {\n  visibleGoods: string[],\n};\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, reverseField }: {\n    sortField: SortType,\n    reverseField: boolean\n  },\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.Alpha:\n          return good1.localeCompare(good2);\n\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const GoodsList: React.FC<Props> = ({ visibleGoods }) => (\n  <ul>\n    {visibleGoods.map(good => (\n      <li key={good} data-cy=\"Good\">{good}</li>\n    ))}\n  </ul>\n);\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType>(SortType.Default);\n  const [reverseField, setIsReversedField] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, reverseField });\n\n  const resetAll = () => {\n    setSortField(SortType.Default);\n    setIsReversedField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.Alpha)}\n          type=\"button\"\n          className={cn('button', 'is-info',\n            {\n              'is-light': sortField !== SortType.Alpha,\n            })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.Length)}\n          type=\"button\"\n          className={cn('button', 'is-success',\n            {\n              'is-light': sortField !== SortType.Length,\n            })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversedField(!reverseField)}\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            {\n              'is-light': !reverseField,\n            })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            onClick={resetAll}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList visibleGoods={visibleGoods} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}